@using MvcCodeFastProject_Alamgir.Helpers
@model MvcCodeFastProject_Alamgir.Models.MedicineCategory

@using (Ajax.BeginForm(actionName: "Edit", controllerName: "MedicineCategories", null, ajaxOptions: new AjaxOptions { HttpMethod = "POST", OnSuccess = "", OnFailure = "" }, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="modal-header">
        <h5 class="modal-title" id="editCategoryModalLabel" style="text-align:center">Edit Medicine</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label" })
           
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
        <hr />
        @for (int i = 0; i < Model.MedicineItems.Count; i++)
        {
            var data_tag = "Items_" + @i + "__Image";

            <div class="form-group">
                @Html.HiddenFor(model => model.MedicineItems[i].ID)
                @Html.HiddenFor(model => model.MedicineItems[i].MedicineCategoryID)
                @Html.LabelFor(model => model.MedicineItems[i].Name, htmlAttributes: new { @class = "col-form-label" })
                @Html.EditorFor(model => model.MedicineItems[i].Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicineItems[i].Name, "", new { @class = "text-danger" })
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.MedicineItems[i].Description, htmlAttributes: new { @class = "col-form-label" })
                @Html.TextAreaFor(model => model.MedicineItems[i].Description, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MedicineItems[i].Description, "", new { @class = "text-danger" })
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.MedicineItems[i].Image, htmlAttributes: new { @class = "col-form-label" })
                <br />
                @Html.ImageFor(model => model.MedicineItems[i].Image, "", 200, 200)
                <input id="file" name="file" type="file" data-tag="@data_tag" onchange="changeImage(this, event)" />
                @Html.ValidationMessageFor(model => model.MedicineItems[i].Image, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.MedicineItems[i].Image)
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.MedicineItems[i].EntryDate, htmlAttributes: new { @class = "col-form-label" })
                @Html.EditorFor(model => model.MedicineItems[i].EntryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicineItems[i].EntryDate, "", new { @class = "text-danger" })
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.MedicineItems[i].Quantity, htmlAttributes: new { @class = "col-form-label" })
                @Html.EditorFor(model => model.MedicineItems[i].Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MedicineItems[i].Quantity, "", new { @class = "text-danger" })
            </div>
        }
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <input type="submit" class="btn btn-success" value="Save" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}
